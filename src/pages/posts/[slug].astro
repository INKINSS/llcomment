---
import { fetchData } from "../../utils/fetchData";
import { marked } from "marked";
import Layout from "../../layouts/Layout.astro";
import { BackDiscover } from "../../components/common/buttons/BackDiscover";

// Función para generar slugs
export const generateSlug = (title) => {
  return title
    .toLowerCase()
    .normalize("NFD")
    .replace(/[\u0300-\u036f]/g, "") // Elimina acentos
    .replace(/ /g, "-") // Reemplaza espacios con guiones
    .replace(/[^\w-]+/g, ""); // Elimina caracteres no alfanuméricos
};

// Generar rutas dinámicas en tiempo de compilación
export async function getStaticPaths() {
  const posts = await fetchData("posts");
  const paths = posts.map((post) => ({
    params: { slug: generateSlug(post.title) },
  }));
  return paths;
}

// Obtener el parámetro dinámico
const { slug } = Astro.params;

// Recuperar todos los posts y encontrar el correspondiente
const posts = await fetchData("posts");
const post = posts.find((p) => generateSlug(p.title) === slug);

if (!post) {
  throw new Error(`Post con slug "${slug}" no encontrado.`);
}

// Convierte el contenido de Markdown a HTML
const contentHTML = marked(post.content);
---

<Layout title={`llcomment || ${post.title}`}>
  <article class="flex mt-16 flex-col items-center">
    <h1 class="ssm:text-[1.8rem] text-center sm:text-[2rem] font-bold">
      {post.title}
    </h1>
    <div class="space-x-2">
      <span class="font-semibold">{post.publishDate}</span>
      <span class="font-semibold">
        {post.nickname}
      </span>
    </div>
    <div
      class="my-10 min-w-[60%] prose px-10 ssm:prose-sm md:prose-base"
      set:html={contentHTML}
    />
    <BackDiscover />
  </article>
</Layout>
